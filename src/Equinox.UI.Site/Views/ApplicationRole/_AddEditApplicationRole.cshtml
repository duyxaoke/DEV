@model Equinox.Application.ViewModels.ApplicationRoleViewModel
@using Equinox.Application.ViewModels

<form asp-action="AddEditApplicationRole" role="form" class="form-horizontal">
    @Html.AntiForgeryToken()
    @await Html.PartialAsync("_ModalHeader", new ModalHeader { Heading = $"{(String.IsNullOrEmpty(Model.Id) ? "Add" : "Edit")} Application Role" })
    <div class="modal-body">
        <div class="form-group">
            <label asp-for="RoleName"></label>
            <input asp-for="RoleName" class="form-control" required />
            <input asp-for="Id" type="hidden" />
        </div>
        <div class="form-group">
            <label asp-for="Description"></label>
            <input asp-for="Description" class="form-control" required />
        </div>
    </div>
    @await Html.PartialAsync("_ModalFooter", new ModalFooter { SubmitButtonText = "Submit" })
</form>
<script>
    $("form").submit(function (event) {
        event.preventDefault();
        let url = $("form").attr('action');
        let data = $("form").serialize();
        $.when(sys.CallAjax(url, data))
            .done(function (response) {
                $('#modal-action').modal('hide');
                sys.Alert(response.status, response.message);
                $('#tblData').DataTable().ajax.reload(null, false);
            })
            .fail(function (error) {
                sys.Alert(false, '@Command.MessageError');
            });
    });
</script>


